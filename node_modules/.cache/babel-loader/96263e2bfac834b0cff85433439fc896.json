{"ast":null,"code":"import _defineProperty from \"/Users/mac/Downloads/react-material-dashboard-master/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/mac/Downloads/react-material-dashboard-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Downloads/react-material-dashboard-master/src/views/QuantityToOrder/components/QTable/tabble.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport Button from '@material-ui/core/Button';\nimport { forwardRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nconst tableIcons = {\n  Add: forwardRef((props, ref) => React.createElement(AddBox, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))),\n  Check: forwardRef((props, ref) => React.createElement(Check, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))),\n  Clear: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }))),\n  Delete: forwardRef((props, ref) => React.createElement(DeleteOutline, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))),\n  DetailPanel: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))),\n  Edit: forwardRef((props, ref) => React.createElement(Edit, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))),\n  Export: forwardRef((props, ref) => React.createElement(SaveAlt, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))),\n  Filter: forwardRef((props, ref) => React.createElement(FilterList, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }))),\n  FirstPage: forwardRef((props, ref) => React.createElement(FirstPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))),\n  LastPage: forwardRef((props, ref) => React.createElement(LastPage, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))),\n  NextPage: forwardRef((props, ref) => React.createElement(ChevronRight, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))),\n  PreviousPage: forwardRef((props, ref) => React.createElement(ChevronLeft, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))),\n  ResetSearch: forwardRef((props, ref) => React.createElement(Clear, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))),\n  Search: forwardRef((props, ref) => React.createElement(Search, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))),\n  SortArrow: forwardRef((props, ref) => React.createElement(ArrowDownward, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))),\n  ThirdStateCheck: forwardRef((props, ref) => React.createElement(Remove, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }))),\n  ViewColumn: forwardRef((props, ref) => React.createElement(ViewColumn, Object.assign({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })))\n};\nexport default function MaterialTableDemo() {\n  const _React$useState = React.useState({\n    columns: [{\n      title: 'Item',\n      field: 'item'\n    }, {\n      title: 'Quantity Requested',\n      field: 'quantityRequested'\n    }, {\n      title: 'Quantity to Order',\n      field: 'quantityToOrder',\n      type: 'numeric'\n    }, {\n      title: 'Quantity Required',\n      field: 'quantityRequired'\n    }, {\n      title: 'Quantity Ordered',\n      field: 'quantityOrdered'\n    }],\n    data: [{\n      item: 'Steel',\n      quantityRequested: 40,\n      quantityToOrder: 3,\n      quantityRequired: 37,\n      quantityOrdered: 3\n    }, {\n      item: 'Cement',\n      quantityRequested: 38,\n      quantityToOrder: 3,\n      quantityRequired: 35,\n      quantityOrdered: 3\n    }]\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"Quantity To Order\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    alignContent: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    component: Link,\n    to: \"/pomaker\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Next\")))));\n}","map":{"version":3,"sources":["/Users/mac/Downloads/react-material-dashboard-master/src/views/QuantityToOrder/components/QTable/tabble.js"],"names":["React","MaterialTable","Button","forwardRef","Link","Card","CardContent","Grid","Typography","Avatar","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","MaterialTableDemo","useState","columns","title","field","type","data","item","quantityRequested","quantityToOrder","quantityRequired","quantityOrdered","state","setState","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nimport Button from '@material-ui/core/Button';\nimport { forwardRef } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Item', field: 'item' },\n      { title: 'Quantity Requested', field: 'quantityRequested' },\n      { title: 'Quantity to Order', field: 'quantityToOrder', type: 'numeric' },\n      { title: 'Quantity Required', field: 'quantityRequired'},\n      { title: 'Quantity Ordered', field: 'quantityOrdered' },\n    ],\n    data: [\n      { item: 'Steel', quantityRequested: 40, quantityToOrder: 3, quantityRequired: 37, quantityOrdered: 3 },\n      { item: 'Cement', quantityRequested: 38, quantityToOrder: 3, quantityRequired: 35, quantityOrdered: 3 },\n    ],\n  });\n\n  return (\n    <React.Fragment>\n    <MaterialTable\n      icons={tableIcons}\n      title=\"Quantity To Order\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n          \n      }} \n      \n    /> \n      <Card>\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          alignContent=\"center\"\n        >\n            <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/pomaker\">\n        Next\n      </Button>\n        \n        </Grid>\n      </CardContent>\n    </Card>\n      \n    </React.Fragment>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}